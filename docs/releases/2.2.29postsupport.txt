============================
Django 2.2.29u release notes
============================

***This is a backport on a branch of Django that is no longer supported.***

July 4, 2022
CVE-2022-34265: Potential SQL injection via ``Trunc(kind)`` and ``Extract(lookup_name)`` arguments
==================================================================================================

:class:`Trunc() <django.db.models.functions.Trunc>` and
:class:`Extract() <django.db.models.functions.Extract>` database functions were
subject to SQL injection if untrusted data was used as a
``kind``/``lookup_name`` value.

Applications that constrain the lookup name and kind choice to a known safe
list are unaffected.
 `Full description
<https://www.djangoproject.com/weblog/2022/jul/04/security-releases/>`__

* Django 4.0 :commit:`(patch) <0dc9c016fadb71a067e5a42be30164e3f96c0492>`
* Django 3.2 :commit:`(patch) <a9010fe5555e6086a9d9ae50069579400ef0685e>`
* Backported to 2.2.29_unsupported in Nov 10, 2022
https://github.com/mirandadam/django/commit/a9010fe5555e6086a9d9ae50069579400ef0685e




*Aug 3, 2022*

Django 3.2.15 fixes a security issue with severity "high" in 3.2.14.
Django 4.0.7 fixes a security issue with severity "high" in 4.0.6.

*Nov 10, 2022
Django 2.2.29_unsupported fixes a security issue with severity "high" in 2.2.28.

CVE-2022-36359: Potential reflected file download vulnerability in ``FileResponse``
===================================================================================

An application may have been vulnerable to a reflected file download (RFD)
attack that sets the Content-Disposition header of a
:class:`~django.http.FileResponse` when the ``filename`` was derived from
user-supplied input. The ``filename`` is now escaped to avoid this possibility.
